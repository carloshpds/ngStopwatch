(function(){angular.module("ngStopwatch.services",[]),angular.module("ngStopwatch.scripts",["ngStopwatch.services"]),angular.module("ngStopwatch",["ngStopwatch.scripts"])}).call(this),function(){angular.module("ngStopwatch.services").service("stopwatch",["$interval",function(t){var r,e,n;return n=0,e=function(){function r(t){var r;this.id=++n,this.lapStarted=null,r={name:"timer"+n,created:(new Date).getTime(),current:0,stopped:null,laps:[],currentLap:0,lastLap:null,refreshRate:100,running:!1,autoRefresh:!0},angular.merge(this,r),this.interval=null,angular.merge(this,t),this.autoRefresh&&this.trackCurrent(),this.start()}return r.prototype.getTime=function(){return this.running&&this.stop(),this.current},r.prototype.start=function(){return this.running?void 0:(this.running=!0,this.lastStart=(new Date).getTime(),this.autoRefresh?this.trackCurrent():void 0)},r.prototype.stop=function(){var r;return r=(new Date).getTime(),this.running?(t.cancel(this.interval),this.running=!1,this.stopped=r,this.current+=this.stopped-this.lastStart,this.currentLap+=this.stopped-this.lastStart):void 0},r.prototype.reset=function(){return angular.merge(this,{created:null,current:0,stopped:null,laps:[],currentLap:0,lastLap:null,running:!1})},r.prototype.lap=function(){var r;if(this.running)return t.cancel(this.interval),r=(new Date).getTime(),this.autoRefresh||(this.current+=r-this.lastStart,this.currentLap+=r-this.lastStart,this.lastStart=r),this.lastLap=this.currentLap,this.currentLap=0,this.laps.push(this.lastLap),this.autoRefresh?this.trackCurrent():void 0},r.prototype.trackCurrent=function(){return this.interval=t(function(t){return function(){var r;return r=(new Date).getTime(),t.current+=r-t.lastStart,t.currentLap+=r-t.lastStart,t.lastStart=r}}(this),this.refreshRate)},r}(),r={create:function(t){var r;return r=new e(t)}}}])}.call(this);