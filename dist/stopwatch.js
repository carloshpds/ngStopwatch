(function() {
  angular.module('ngStopwatch.services', []);

  angular.module('ngStopwatch.scripts', ['ngStopwatch.services']);

  angular.module('ngStopwatch', ['ngStopwatch.scripts']);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFBQSxPQUFPLENBQUMsTUFBUixDQUFlLHNCQUFmLEVBQTJDLEVBQTNDOztFQU1BLE9BQU8sQ0FBQyxNQUFSLENBQWUscUJBQWYsRUFBMkMsQ0FDekMsc0JBRHlDLENBQTNDOztFQVFBLE9BQU8sQ0FBQyxNQUFSLENBQWUsYUFBZixFQUE4QixDQUM1QixxQkFENEIsQ0FBOUI7QUFkQSIsImZpbGUiOiJtb2R1bGUuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyIjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIyBNb2R1bGVzXG4jID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuYW5ndWxhci5tb2R1bGUgJ25nU3RvcHdhdGNoLnNlcnZpY2VzJyAgICAsIFtdXG5cblxuIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiMgU2NyaXB0cyBNb2R1bGVcbiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5hbmd1bGFyLm1vZHVsZSAnbmdTdG9wd2F0Y2guc2NyaXB0cycgICAgICwgW1xuICAnbmdTdG9wd2F0Y2guc2VydmljZXMnXG5dXG5cblxuIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiMgTWFpbiBNb2R1bGVcbiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5hbmd1bGFyLm1vZHVsZSAnbmdTdG9wd2F0Y2gnLCBbXG4gICduZ1N0b3B3YXRjaC5zY3JpcHRzJ1xuICBdIl19
(function() {
  angular.module('ngStopwatch.services').service('stopwatch', function() {
    var API;
    return API = {
      timers: {},
      create: function(name) {
        return API.timers[name] = {
          name: name,
          isRunning: true,
          started: new Date().getTime(),
          current: 0,
          stopped: null,
          laps: [],
          lastLap: 0
        };
      },
      getTime: function(name) {
        var time;
        if (API.timers[name] != null) {
          return;
        }
        time = -1;
        if (API.timers[name].isRunning) {
          time = API.timers[name].current = new Date().getTime() - API.timers[name].started;
        } else {
          time = API.timers[name].stopped - API.timers[name].started;
        }
        return time;
      },
      start: function(name, reset) {
        if (API.timers[name] == null) {
          API.create(name);
        }
        API.timers[name].started = new Date().getTime();
        console.log(API.timers[name]);
        return API.timers[name];
      },
      stop: function(name) {
        if (API.timers[name] != null) {
          API.timers[name].stopped = new Date().getTime();
          API.timers[name].current = API.timers[name].stopped - API.timers[name].started;
        }
        return API.timers[name].current;
      },
      lap: function(name) {
        var lapTime, timer;
        timer = API.timers[name];
        if (timer.laps.length === 0) {
          lapTime = new Date().getTime() - timer.started;
        } else {
          lapTime = new Date().getTime() - timer.laps[timer.laps.length - 1];
        }
        timer.lastLap = lapTime;
        return timer.laps.push(lapTime);
      },
      reset: function(name) {
        return API.timers[name] = {
          name: name,
          isRunning: false,
          started: null,
          current: 0,
          stopped: null,
          laps: [],
          lastLap: 0
        };
      }
    };
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMvc2VydmljZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBQSxPQUFPLENBQUMsTUFBUixDQUFlLHNCQUFmLENBQ0EsQ0FBQyxPQURELENBQ1MsV0FEVCxFQUNzQixTQUFBO0FBRXBCLFFBQUE7QUFBQSxXQUFPLEdBQUEsR0FBTTtNQUNYLE1BQUEsRUFBUSxFQURHO01BRVgsTUFBQSxFQUFRLFNBQUMsSUFBRDtlQUNOLEdBQUcsQ0FBQyxNQUFPLENBQUEsSUFBQSxDQUFYLEdBQW1CO1VBQ2pCLElBQUEsRUFBWSxJQURLO1VBRWpCLFNBQUEsRUFBWSxJQUZLO1VBR2pCLE9BQUEsRUFBZ0IsSUFBQSxJQUFBLENBQUEsQ0FBTSxDQUFDLE9BQVAsQ0FBQSxDQUhDO1VBSWpCLE9BQUEsRUFBWSxDQUpLO1VBS2pCLE9BQUEsRUFBWSxJQUxLO1VBTWpCLElBQUEsRUFBWSxFQU5LO1VBT2pCLE9BQUEsRUFBWSxDQVBLOztNQURiLENBRkc7TUFhWCxPQUFBLEVBQVMsU0FBQyxJQUFEO0FBQ1AsWUFBQTtRQUFBLElBQVUsd0JBQVY7QUFBQSxpQkFBQTs7UUFDQSxJQUFBLEdBQU8sQ0FBQztRQUNSLElBQUcsR0FBRyxDQUFDLE1BQU8sQ0FBQSxJQUFBLENBQUssQ0FBQyxTQUFwQjtVQUNFLElBQUEsR0FBTyxHQUFHLENBQUMsTUFBTyxDQUFBLElBQUEsQ0FBSyxDQUFDLE9BQWpCLEdBQStCLElBQUEsSUFBQSxDQUFBLENBQU0sQ0FBQyxPQUFQLENBQUEsQ0FBSixHQUF1QixHQUFHLENBQUMsTUFBTyxDQUFBLElBQUEsQ0FBSyxDQUFDLFFBRDVFO1NBQUEsTUFBQTtVQUdFLElBQUEsR0FBTyxHQUFHLENBQUMsTUFBTyxDQUFBLElBQUEsQ0FBSyxDQUFDLE9BQWpCLEdBQTJCLEdBQUcsQ0FBQyxNQUFPLENBQUEsSUFBQSxDQUFLLENBQUMsUUFIckQ7O0FBS0EsZUFBTztNQVJBLENBYkU7TUF1QlgsS0FBQSxFQUFPLFNBQUMsSUFBRCxFQUFPLEtBQVA7UUFDTCxJQUFxQix3QkFBckI7VUFBQSxHQUFHLENBQUMsTUFBSixDQUFXLElBQVgsRUFBQTs7UUFDQSxHQUFHLENBQUMsTUFBTyxDQUFBLElBQUEsQ0FBSyxDQUFDLE9BQWpCLEdBQStCLElBQUEsSUFBQSxDQUFBLENBQU0sQ0FBQyxPQUFQLENBQUE7UUFFL0IsT0FBTyxDQUFDLEdBQVIsQ0FBWSxHQUFHLENBQUMsTUFBTyxDQUFBLElBQUEsQ0FBdkI7QUFFQSxlQUFPLEdBQUcsQ0FBQyxNQUFPLENBQUEsSUFBQTtNQU5iLENBdkJJO01BZ0NYLElBQUEsRUFBTSxTQUFDLElBQUQ7UUFDSixJQUFHLHdCQUFIO1VBQ0UsR0FBRyxDQUFDLE1BQU8sQ0FBQSxJQUFBLENBQUssQ0FBQyxPQUFqQixHQUErQixJQUFBLElBQUEsQ0FBQSxDQUFNLENBQUMsT0FBUCxDQUFBO1VBQy9CLEdBQUcsQ0FBQyxNQUFPLENBQUEsSUFBQSxDQUFLLENBQUMsT0FBakIsR0FBMkIsR0FBRyxDQUFDLE1BQU8sQ0FBQSxJQUFBLENBQUssQ0FBQyxPQUFqQixHQUEyQixHQUFHLENBQUMsTUFBTyxDQUFBLElBQUEsQ0FBSyxDQUFDLFFBRnpFOztBQUlBLGVBQU8sR0FBRyxDQUFDLE1BQU8sQ0FBQSxJQUFBLENBQUssQ0FBQztNQUxwQixDQWhDSztNQXVDWCxHQUFBLEVBQUssU0FBQyxJQUFEO0FBQ0gsWUFBQTtRQUFBLEtBQUEsR0FBUSxHQUFHLENBQUMsTUFBTyxDQUFBLElBQUE7UUFFbkIsSUFBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQVgsS0FBcUIsQ0FBeEI7VUFDRSxPQUFBLEdBQWMsSUFBQSxJQUFBLENBQUEsQ0FBTSxDQUFDLE9BQVAsQ0FBQSxDQUFKLEdBQXVCLEtBQUssQ0FBQyxRQUR6QztTQUFBLE1BQUE7VUFHRSxPQUFBLEdBQWMsSUFBQSxJQUFBLENBQUEsQ0FBTSxDQUFDLE9BQVAsQ0FBQSxDQUFKLEdBQXVCLEtBQUssQ0FBQyxJQUFLLENBQUEsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFYLEdBQW9CLENBQXBCLEVBSDlDOztRQU1BLEtBQUssQ0FBQyxPQUFOLEdBQWdCO2VBQ2hCLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBWCxDQUFnQixPQUFoQjtNQVZHLENBdkNNO01BcURYLEtBQUEsRUFBTyxTQUFDLElBQUQ7ZUFDTCxHQUFHLENBQUMsTUFBTyxDQUFBLElBQUEsQ0FBWCxHQUFtQjtVQUNqQixJQUFBLEVBQVksSUFESztVQUVqQixTQUFBLEVBQVksS0FGSztVQUdqQixPQUFBLEVBQVksSUFISztVQUlqQixPQUFBLEVBQVksQ0FKSztVQUtqQixPQUFBLEVBQVksSUFMSztVQU1qQixJQUFBLEVBQVksRUFOSztVQU9qQixPQUFBLEVBQVksQ0FQSzs7TUFEZCxDQXJESTs7RUFGTyxDQUR0QjtBQUFBIiwiZmlsZSI6InNjcmlwdHMvc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlICduZ1N0b3B3YXRjaC5zZXJ2aWNlcydcbi5zZXJ2aWNlICdzdG9wd2F0Y2gnLCAoKS0+XG5cbiAgcmV0dXJuIEFQSSA9IHtcbiAgICB0aW1lcnM6IHt9XG4gICAgY3JlYXRlOiAobmFtZSktPlxuICAgICAgQVBJLnRpbWVyc1tuYW1lXSA9IHtcbiAgICAgICAgbmFtZSAgICAgIDogbmFtZVxuICAgICAgICBpc1J1bm5pbmcgOiB0cnVlXG4gICAgICAgIHN0YXJ0ZWQgICA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpXG4gICAgICAgIGN1cnJlbnQgICA6IDBcbiAgICAgICAgc3RvcHBlZCAgIDogbnVsbFxuICAgICAgICBsYXBzICAgICAgOiBbXVxuICAgICAgICBsYXN0TGFwICAgOiAwXG4gICAgICB9XG5cbiAgICBnZXRUaW1lOiAobmFtZSktPlxuICAgICAgcmV0dXJuIGlmIEFQSS50aW1lcnNbbmFtZV0/XG4gICAgICB0aW1lID0gLTFcbiAgICAgIGlmIEFQSS50aW1lcnNbbmFtZV0uaXNSdW5uaW5nXG4gICAgICAgIHRpbWUgPSBBUEkudGltZXJzW25hbWVdLmN1cnJlbnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIEFQSS50aW1lcnNbbmFtZV0uc3RhcnRlZFxuICAgICAgZWxzZVxuICAgICAgICB0aW1lID0gQVBJLnRpbWVyc1tuYW1lXS5zdG9wcGVkIC0gQVBJLnRpbWVyc1tuYW1lXS5zdGFydGVkXG5cbiAgICAgIHJldHVybiB0aW1lXG5cbiAgICBzdGFydDogKG5hbWUsIHJlc2V0KS0+XG4gICAgICBBUEkuY3JlYXRlKG5hbWUpIGlmICFBUEkudGltZXJzW25hbWVdP1xuICAgICAgQVBJLnRpbWVyc1tuYW1lXS5zdGFydGVkID0gbmV3IERhdGUoKS5nZXRUaW1lKClcblxuICAgICAgY29uc29sZS5sb2cgQVBJLnRpbWVyc1tuYW1lXVxuXG4gICAgICByZXR1cm4gQVBJLnRpbWVyc1tuYW1lXVxuXG5cbiAgICBzdG9wOiAobmFtZSktPlxuICAgICAgaWYgQVBJLnRpbWVyc1tuYW1lXT9cbiAgICAgICAgQVBJLnRpbWVyc1tuYW1lXS5zdG9wcGVkID0gbmV3IERhdGUoKS5nZXRUaW1lKClcbiAgICAgICAgQVBJLnRpbWVyc1tuYW1lXS5jdXJyZW50ID0gQVBJLnRpbWVyc1tuYW1lXS5zdG9wcGVkIC0gQVBJLnRpbWVyc1tuYW1lXS5zdGFydGVkXG5cbiAgICAgIHJldHVybiBBUEkudGltZXJzW25hbWVdLmN1cnJlbnRcblxuICAgIGxhcDogKG5hbWUpLT5cbiAgICAgIHRpbWVyID0gQVBJLnRpbWVyc1tuYW1lXVxuXG4gICAgICBpZiB0aW1lci5sYXBzLmxlbmd0aCBpcyAwXG4gICAgICAgIGxhcFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHRpbWVyLnN0YXJ0ZWRcbiAgICAgIGVsc2VcbiAgICAgICAgbGFwVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gdGltZXIubGFwc1t0aW1lci5sYXBzLmxlbmd0aCAtIDFdXG5cblxuICAgICAgdGltZXIubGFzdExhcCA9IGxhcFRpbWVcbiAgICAgIHRpbWVyLmxhcHMucHVzaCBsYXBUaW1lXG5cblxuXG4gICAgcmVzZXQ6IChuYW1lKS0+XG4gICAgICBBUEkudGltZXJzW25hbWVdID0ge1xuICAgICAgICBuYW1lICAgICAgOiBuYW1lXG4gICAgICAgIGlzUnVubmluZyA6IGZhbHNlXG4gICAgICAgIHN0YXJ0ZWQgICA6IG51bGxcbiAgICAgICAgY3VycmVudCAgIDogMFxuICAgICAgICBzdG9wcGVkICAgOiBudWxsXG4gICAgICAgIGxhcHMgICAgICA6IFtdXG4gICAgICAgIGxhc3RMYXAgICA6IDBcbiAgICAgIH1cbiAgfVxuIl19